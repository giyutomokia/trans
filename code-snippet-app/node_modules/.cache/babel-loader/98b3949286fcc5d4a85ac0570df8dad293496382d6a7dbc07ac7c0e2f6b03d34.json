{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Barbie\\\\.vscode\\\\mern\\\\task\\\\code-snippet-app\\\\src\\\\components\\\\SnippetDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SnippetDisplay() {\n  _s();\n  const [snippets, setSnippets] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get('http://localhost:3000/snippets');\n        setSnippets(response.data);\n      } catch (error) {\n        console.error('Error fetching snippets:', error);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Snippet Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Standard Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timestamp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: snippets.map((snippet, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: snippet.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: snippet.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: snippet.stdin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: snippet.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: snippet.code.slice(0, 100)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(SnippetDisplay, \"TN39xfkPJCurJQQJ4BSQSIzJuYE=\");\n_c = SnippetDisplay;\nconst styles = {\n  container: {\n    maxWidth: '800px',\n    margin: '0 auto',\n    padding: '20px',\n    backgroundColor: '#f9f9f9',\n    borderRadius: '8px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n  },\n  table: {\n    width: '100%',\n    borderCollapse: 'collapse'\n  },\n  th: {\n    backgroundColor: '#f2f2f2',\n    border: '1px solid #ddd',\n    padding: '8px',\n    textAlign: 'left'\n  },\n  td: {\n    border: '1px solid #ddd',\n    padding: '8px',\n    textAlign: 'left'\n  }\n};\nexport default SnippetDisplay;\nvar _c;\n$RefreshReg$(_c, \"SnippetDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SnippetDisplay","_s","snippets","setSnippets","fetchData","response","get","data","error","console","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","table","map","snippet","index","username","language","stdin","timestamp","code","slice","_c","maxWidth","margin","padding","backgroundColor","borderRadius","boxShadow","width","borderCollapse","th","border","textAlign","td","$RefreshReg$"],"sources":["C:/Users/Barbie/.vscode/mern/task/code-snippet-app/src/components/SnippetDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction SnippetDisplay() {\r\n  const [snippets, setSnippets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/snippets');\r\n        setSnippets(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching snippets:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1>Snippet Display</h1>\r\n      <table style={styles.table}>\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Language</th>\r\n            <th>Standard Input</th>\r\n            <th>Timestamp</th>\r\n            <th>Code</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {snippets.map((snippet, index) => (\r\n            <tr key={index}>\r\n              <td>{snippet.username}</td>\r\n              <td>{snippet.language}</td>\r\n              <td>{snippet.stdin}</td>\r\n              <td>{snippet.timestamp}</td>\r\n              <td>{snippet.code.slice(0, 100)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    maxWidth: '800px',\r\n    margin: '0 auto',\r\n    padding: '20px',\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\r\n  },\r\n  table: {\r\n    width: '100%',\r\n    borderCollapse: 'collapse'\r\n  },\r\n  th: {\r\n    backgroundColor: '#f2f2f2',\r\n    border: '1px solid #ddd',\r\n    padding: '8px',\r\n    textAlign: 'left'\r\n  },\r\n  td: {\r\n    border: '1px solid #ddd',\r\n    padding: '8px',\r\n    textAlign: 'left'\r\n  }\r\n};\r\n\r\nexport default SnippetDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}